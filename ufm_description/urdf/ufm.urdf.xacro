<?xml version='1.0'?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="ufm">

  <xacro:arg name="gpu" default="false"/>
  <xacro:property name="gpu" value="$(arg gpu)" />
  <xacro:arg name="organize_cloud" default="false"/>
  <xacro:property name="organize_cloud" value="$(arg organize_cloud)" />


  <xacro:arg name="ufmMesh" default="/home/ubuntu/otherRosStuff/gazeboModels/src/UFM/UFM5.dae"/>
  <xacro:property name="ufmMesh" value="$(arg ufmMesh)" />

    <link name='base_link'>
      <inertial>
        <mass value="30" />
        <inertia ixx="0.166667" ixy="0" ixz="0" iyy="0.166667" iyz="0" izz="0.166667"/>
        <pose frame=''>0 0 0 0 -0 0</pose>
      </inertial>
      <pose frame=''>-0 0 0 0 -0 0</pose>
      <gravity>1</gravity>
      <!--
      <self_collide>0</self_collide>
      <kinematic>0</kinematic>
      <enable_wind>0</enable_wind> -->
      <visual name='ufm_visual'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh filename="package://ufm_description/meshes/UFM5.dae" scale="1 1 1"/>
        </geometry>
        <material name='ufm_material'>Gazebo/Red</material>
      </visual>
      <collision name='collision'>
        <laser_retro>0</laser_retro>
        <max_contacts>10</max_contacts>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh filename="package://ufm_description/meshes/UFM5.dae" scale="1 1 1"/>
        </geometry>
      </collision>
    </link>
    <link name='camera_0_link'>
      <!-- <origin xyz="0.176756 0.500758 1.18731" rpy="0 0 0" /> -->
      <!-- <pose>0.176756 0.500758 4.18731 0 -0 0</pose> -->
<!--       
        <visual>
          <origin xyz="-0.510141 -0.145125 1.62028" rpy="0 0 0" />
          <geometry>
            <box size='0.1 0.1 0.1' />
          </geometry>
          
        </visual> -->
        <inertial>
          <origin xyz="0.176756 0.500758 1.18731" rpy="0 0 0" />
          <mass value="0.1" />
          <inertia ixx="0.000166667" ixy="0" ixz="0" iyy="0.000166667" iyz="0" izz="0.000166667"/>
        </inertial>
        <collision name='collision'>
          <origin xyz="0.176756 0.500758 1.18731" rpy="0 0 0" />
          <geometry>
            <box size='0.1 0.1 0.1' />
          </geometry>
        </collision>
        <!-- <sensor name='camera0' type='camera'>
          <camera name='__default__'>
            <horizontal_fov>1.085595</horizontal_fov>
            <image>
              <width>640</width>
              <height>480</height>
            </image>
            <clip>
              <near>0.02</near>
              <far>300</far>
            </clip>
          </camera>
          <always_on>true</always_on>
          <update_rate>30</update_rate>
          <visualize>true</visualize>
        </sensor>    -->
    </link>
    <joint name="base_to_camera0" type="fixed">
      <parent link='base_link' />
      <child link='camera_0_link' />
      <origin xyz="0.176756 0.500758 1.18731" rpy="0 0 0" />
      <!-- <pose>0.176756 0.500758 4.18731 0 -0 0</pose> -->
      <!-- <origin xyz="0.176756 0.500758 4.18731" rpy="0 0 0" /> -->
	  </joint> 
    <link name='camera_1_link'>
      <origin xyz="-0.510141 -0.145125 1.62028" rpy="0 0 0" />
        <inertial>
          <mass value="0.1" />
          <inertia ixx="0.000166667" ixy="0" ixz="0" iyy="0.000166667" iyz="0" izz="0.000166667"/>
        </inertial>
        <collision name='collision'>
          <geometry>
            <box size='0.1 0.1 0.1' />
          </geometry>
        </collision>
        <sensor name='camera1' type='camera'>
          <camera name='__default__'>
            <horizontal_fov>1.085595</horizontal_fov>
            <image>
              <width>640</width>
              <height>480</height>
            </image>
            <clip>
              <near>0.02</near>
              <far>300</far>
            </clip>
          </camera>
          <always_on>true</always_on>
          <update_rate>30</update_rate>
          <visualize>true</visualize>
        </sensor>
      </link>
    <joint name="base_to_camera1" type="fixed">
      <parent link='base_link' />
      <child link='camera_1_link' />
      <origin xyz="-0.510141 -0.145125 1.62028" rpy="0 0 0" />
	  </joint> 

    <xacro:include filename="$(find ufm_description)/urdf/HDL-32E.urdf.xacro"/>
    <xacro:HDL-32E parent="base_link" name="velodyne" topic="/velodyne_points" organize_cloud="${organize_cloud}" hz="10" samples="220" gpu="${gpu}">
      <origin xyz="-0.372782 0.06309 1.7050" rpy="0 0 0" />
      <!-- <pose>-0.372782 0.06309 1.70508 0 -0 0</pose> -->
    </xacro:HDL-32E>

    <joint name='velodyne-to-base-joint' type='fixed'>
          <child link='velodyne' />
          <parent link='base_link' />
    </joint>




    <joint name="wheel_left_joint" type="continuous">
      <parent link="base_link"/>
      <child link="wheel_left_link"/>
      <origin xyz="0.0 0.144 0.023" rpy="-1.57 0 0"/>
      <axis xyz="0 0 1"/>
    </joint>

  <link name="wheel_left_link">
    <visual>
      <origin xyz="0 0 0" rpy="1.57 0 0"/>
      <geometry>
        <mesh filename="package://turtlebot3_description/meshes/wheels/left_tire.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="dark"/>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.018" radius="0.033"/>
      </geometry>
    </collision>

    <inertial>
      <origin xyz="0 0 0" />
      <mass value="2.8498940e-02" />
      <inertia ixx="1.1175580e-05" ixy="-4.2369783e-11" ixz="-5.9381719e-09"
               iyy="1.1192413e-05" iyz="-1.4400107e-11"
               izz="2.0712558e-05" />
      </inertial>
  </link>

  <joint name="wheel_right_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_right_link"/>
    <origin xyz="0.0 -0.144 0.023" rpy="-1.57 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <link name="wheel_right_link">
    <visual>
      <origin xyz="0 0 0" rpy="1.57 0 0"/>
      <geometry>
        <mesh filename="package://turtlebot3_description/meshes/wheels/right_tire.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="dark"/>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.018" radius="0.033"/>
      </geometry>
    </collision>

    <inertial>
      <origin xyz="0 0 0" />
      <mass value="2.8498940e-02" />
      <inertia ixx="1.1175580e-05" ixy="-4.2369783e-11" ixz="-5.9381719e-09"
               iyy="1.1192413e-05" iyz="-1.4400107e-11"
               izz="2.0712558e-05" />
    </inertial>
  </link>

  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="0.0 0 0.068" rpy="0 0 0"/>
  </joint>

  <link name="imu_link"/>
    <gazebo reference="imu_link">
      <sensor type="imu" name="imu">
        <always_on>true</always_on>
        <visualize>true</visualize>
      </sensor>
      <material>Gazebo/Grey</material>
    </gazebo>

  <gazebo>
    <plugin name="ufm_controller" filename="libgazebo_ros_diff_drive.so">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometrySource>world</odometrySource>
      <publishOdomTF>true</publishOdomTF>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <publishWheelTF>false</publishWheelTF>
      <publishTf>true</publishTf>
      <publishWheelJointState>true</publishWheelJointState>
      <legacyMode>false</legacyMode>
      <updateRate>30</updateRate>
      <leftJoint>wheel_left_joint</leftJoint>
      <rightJoint>wheel_right_joint</rightJoint>
      <wheelSeparation>0.287</wheelSeparation>
      <wheelDiameter>0.066</wheelDiameter>
      <wheelAcceleration>1</wheelAcceleration>
      <wheelTorque>10</wheelTorque>
      <rosDebugLevel>na</rosDebugLevel>
    </plugin>
  </gazebo>
  
  <gazebo>
    <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>imu_link</bodyName>
      <frameName>imu_link</frameName>
      <topicName>imu</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>0</updateRate>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </rate>
          <accel>
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </plugin>
  </gazebo>
 
  <!-- <gazebo reference="camera_0_link">
    <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>30.0</updateRate>
      <cameraName>camera0</cameraName>
      <frameName>camera_rgb_optical_frame</frameName>
      <imageTopicName>rgb/image_raw</imageTopicName>
      <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
      <hackBaseline>0.07</hackBaseline>
      <distortionK1>0.0</distortionK1>
      <distortionK2>0.0</distortionK2>
      <distortionK3>0.0</distortionK3>
      <distortionT1>0.0</distortionT1>
      <distortionT2>0.0</distortionT2>
    </plugin>
  </gazebo> -->
  <!--link : https://www.raspberrypi.org/documentation/hardware/camera/-->
  <gazebo reference="camera_0_link">
    <sensor type="camera" name="Pi Camera">
      <!-- <pose>0.176756 0.500758 4.18731 0 -0 0</pose> -->
      <!-- <origin xyz="-0.510141 -0.145125 1.62028" rpy="0 0 0" /> -->
      <!-- <pose>0.176756 0.500758 1.18731 0 0 0</pose> -->
      <!-- <pose>0.176756 0.500758 4.18731 0 -0 0</pose> -->
      <always_on>true</always_on>
      <visualize>true</visualize>
      <camera>
          <!-- <pose>0.176756 0.500758 4.18731 0 -0 0</pose> -->
          <horizontal_fov>1.085595</horizontal_fov>
          <image>
              <width>640</width>
              <height>480</height>
              <format>R8G8B8</format>
          </image>
          <clip>
              <near>0.03</near>
              <far>100</far>
          </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>camera</cameraName>
        <frameName>camera_rgb_optical_frame</frameName>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>


  <gazebo reference="camera_1_link">
    <sensor type="camera" name="Pi Camera2">
      <!-- <pose>0.176756 0.500758 4.18731 0 -0 0</pose> -->
      <!-- <origin xyz="-0.510141 -0.145125 1.62028" rpy="0 0 0" /> -->
      <!-- <pose>0.176756 0.500758 1.18731 0 0 0</pose> -->
      <!-- <pose>0.176756 0.500758 4.18731 0 -0 0</pose> -->
      <always_on>true</always_on>
      <visualize>true</visualize>
      <camera>
          <!-- <pose>0.176756 0.500758 4.18731 0 -0 0</pose> -->
          <horizontal_fov>1.085595</horizontal_fov>
          <image>
              <width>640</width>
              <height>480</height>
              <format>R8G8B8</format>
          </image>
          <clip>
              <near>0.03</near>
              <far>100</far>
          </clip>
      </camera>
      <plugin name="camera_controller2" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>camera2</cameraName>
        <frameName>camera_rgb_optical_frame2</frameName>
        <imageTopicName>rgb/image_raw2</imageTopicName>
        <cameraInfoTopicName>rgb/camera_info2</cameraInfoTopicName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>


    <static>0</static>
</robot>
